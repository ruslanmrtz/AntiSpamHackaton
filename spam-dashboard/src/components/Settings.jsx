import { useState } from 'react'

const Settings = () => {
  const [settings, setSettings] = useState({
    autoUpdate: true,
    updateInterval: 5,
    showNotifications: true,
    emailThreshold: 100,
    darkMode: false,
    language: 'ru',
    enableSounds: false,
    maxEmailsDisplay: 50
  })

  const [activeTab, setActiveTab] = useState('general')

  const handleSettingChange = (setting, value) => {
    setSettings(prev => ({
      ...prev,
      [setting]: value
    }))
  }

  const tabs = [
    { id: 'general', label: '–û–±—â–∏–µ', icon: '‚öôÔ∏è' },
    { id: 'notifications', label: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', icon: 'üîî' },
    { id: 'security', label: '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å', icon: 'üîí' },
    { id: 'advanced', label: '–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ', icon: 'üîß' }
  ]

  return (
    <div className="min-h-screen bg-gray-50">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="bg-white shadow-sm border-b">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="py-6">
            <div className="flex items-center space-x-3">
              <span className="text-3xl">‚öôÔ∏è</span>
              <div>
                <h1 className="text-3xl font-bold text-gray-900">–ù–∞—Å—Ç—Ä–æ–π–∫–∏</h1>
                <p className="text-gray-600 mt-1">
                  –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –∑–∞—â–∏—Ç—ã –æ—Ç —Å–ø–∞–º–∞
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>

      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <div className="grid grid-cols-1 lg:grid-cols-4 gap-8">
          {/* –ë–æ–∫–æ–≤–æ–µ –º–µ–Ω—é –≤–∫–ª–∞–¥–æ–∫ */}
          <div className="lg:col-span-1">
            <nav className="space-y-1">
              {tabs.map((tab) => (
                <button
                  key={tab.id}
                  onClick={() => setActiveTab(tab.id)}
                  className={`w-full flex items-center space-x-3 px-4 py-3 text-left rounded-lg transition-colors ${
                    activeTab === tab.id
                      ? 'bg-red-50 text-red-700 border border-red-200'
                      : 'text-gray-700 hover:bg-gray-100'
                  }`}
                >
                  <span className="text-xl">{tab.icon}</span>
                  <span className="font-medium">{tab.label}</span>
                </button>
              ))}
            </nav>
          </div>

          {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
          <div className="lg:col-span-3">
            <div className="bg-white rounded-lg shadow-sm border border-gray-200">
              {/* –û–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ */}
              {activeTab === 'general' && (
                <div className="p-6">
                  <h2 className="text-xl font-semibold text-gray-900 mb-6">–û–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</h2>
                  
                  <div className="space-y-6">
                    {/* –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ */}
                    <div className="flex items-center justify-between">
                      <div>
                        <h3 className="text-sm font-medium text-gray-900">–ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö</h3>
                        <p className="text-sm text-gray-500">–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è—Ç—å —Å–ø–∏—Å–æ–∫ —Å–ø–∞–º-–ø–∏—Å–µ–º</p>
                      </div>
                      <button
                        onClick={() => handleSettingChange('autoUpdate', !settings.autoUpdate)}
                        className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${
                          settings.autoUpdate ? 'bg-red-600' : 'bg-gray-200'
                        }`}
                      >
                        <span className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${
                          settings.autoUpdate ? 'translate-x-6' : 'translate-x-1'
                        }`} />
                      </button>
                    </div>

                    {/* –ò–Ω—Ç–µ—Ä–≤–∞–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è */}
                    <div>
                      <label className="block text-sm font-medium text-gray-900 mb-2">
                        –ò–Ω—Ç–µ—Ä–≤–∞–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (—Å–µ–∫—É–Ω–¥—ã)
                      </label>
                      <select
                        value={settings.updateInterval}
                        onChange={(e) => handleSettingChange('updateInterval', parseInt(e.target.value))}
                        className="block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-red-500 focus:border-red-500"
                      >
                        <option value={1}>1 —Å–µ–∫—É–Ω–¥–∞</option>
                        <option value={5}>5 —Å–µ–∫—É–Ω–¥</option>
                        <option value={10}>10 —Å–µ–∫—É–Ω–¥</option>
                        <option value={30}>30 —Å–µ–∫—É–Ω–¥</option>
                        <option value={60}>1 –º–∏–Ω—É—Ç–∞</option>
                      </select>
                    </div>

                    {/* –Ø–∑—ã–∫ */}
                    <div>
                      <label className="block text-sm font-medium text-gray-900 mb-2">
                        –Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
                      </label>
                      <select
                        value={settings.language}
                        onChange={(e) => handleSettingChange('language', e.target.value)}
                        className="block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-red-500 focus:border-red-500"
                      >
                        <option value="ru">–†—É—Å—Å–∫–∏–π</option>
                        <option value="en">English</option>
                        <option value="es">Espa√±ol</option>
                      </select>
                    </div>

                    {/* –¢–µ–º–Ω–∞—è —Ç–µ–º–∞ */}
                    <div className="flex items-center justify-between">
                      <div>
                        <h3 className="text-sm font-medium text-gray-900">–¢–µ–º–Ω–∞—è —Ç–µ–º–∞</h3>
                        <p className="text-sm text-gray-500">–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–µ–º–Ω–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞</p>
                      </div>
                      <button
                        onClick={() => handleSettingChange('darkMode', !settings.darkMode)}
                        className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${
                          settings.darkMode ? 'bg-red-600' : 'bg-gray-200'
                        }`}
                      >
                        <span className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${
                          settings.darkMode ? 'translate-x-6' : 'translate-x-1'
                        }`} />
                      </button>
                    </div>
                  </div>
                </div>
              )}

              {/* –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è */}
              {activeTab === 'notifications' && (
                <div className="p-6">
                  <h2 className="text-xl font-semibold text-gray-900 mb-6">–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</h2>
                  
                  <div className="space-y-6">
                    <div className="flex items-center justify-between">
                      <div>
                        <h3 className="text-sm font-medium text-gray-900">–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h3>
                        <p className="text-sm text-gray-500">–û—Ç–æ–±—Ä–∞–∂–∞—Ç—å –≤—Å–ø–ª—ã–≤–∞—é—â–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö —É–≥—Ä–æ–∑–∞—Ö</p>
                      </div>
                      <button
                        onClick={() => handleSettingChange('showNotifications', !settings.showNotifications)}
                        className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${
                          settings.showNotifications ? 'bg-red-600' : 'bg-gray-200'
                        }`}
                      >
                        <span className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${
                          settings.showNotifications ? 'translate-x-6' : 'translate-x-1'
                        }`} />
                      </button>
                    </div>

                    <div className="flex items-center justify-between">
                      <div>
                        <h3 className="text-sm font-medium text-gray-900">–ó–≤—É–∫–æ–≤—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h3>
                        <p className="text-sm text-gray-500">–í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å –∑–≤—É–∫ –ø—Ä–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–∏ —Å–ø–∞–º–∞</p>
                      </div>
                      <button
                        onClick={() => handleSettingChange('enableSounds', !settings.enableSounds)}
                        className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${
                          settings.enableSounds ? 'bg-red-600' : 'bg-gray-200'
                        }`}
                      >
                        <span className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${
                          settings.enableSounds ? 'translate-x-6' : 'translate-x-1'
                        }`} />
                      </button>
                    </div>

                    <div>
                      <label className="block text-sm font-medium text-gray-900 mb-2">
                        –ü–æ—Ä–æ–≥ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (–ø–∏—Å–µ–º –≤ —á–∞—Å)
                      </label>
                      <input
                        type="number"
                        value={settings.emailThreshold}
                        onChange={(e) => handleSettingChange('emailThreshold', parseInt(e.target.value))}
                        className="block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-red-500 focus:border-red-500"
                        min="1"
                        max="1000"
                      />
                      <p className="text-xs text-gray-500 mt-1">
                        –£–≤–µ–¥–æ–º–ª—è—Ç—å –ø—Ä–∏ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–∏ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–ø–∞–º-–ø–∏—Å–µ–º –≤ —á–∞—Å
                      </p>
                    </div>
                  </div>
                </div>
              )}

              {/* –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å */}
              {activeTab === 'security' && (
                <div className="p-6">
                  <h2 className="text-xl font-semibold text-gray-900 mb-6">–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏</h2>
                  
                  <div className="space-y-6">
                    <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-4">
                      <div className="flex items-center space-x-2">
                        <span className="text-yellow-600">‚ö†Ô∏è</span>
                        <h3 className="text-sm font-medium text-yellow-800">–í–Ω–∏–º–∞–Ω–∏–µ</h3>
                      </div>
                      <p className="text-sm text-yellow-700 mt-1">
                        –ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –º–æ–∂–µ—Ç –ø–æ–≤–ª–∏—è—Ç—å –Ω–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∑–∞—â–∏—Ç—ã –æ—Ç —Å–ø–∞–º–∞.
                      </p>
                    </div>

                    <div className="space-y-4">
                      <h3 className="text-lg font-medium text-gray-900">–£—Ä–æ–≤–µ–Ω—å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏</h3>
                      <div className="space-y-2">
                        {['–ù–∏–∑–∫–∏–π', '–°—Ä–µ–¥–Ω–∏–π', '–í—ã—Å–æ–∫–∏–π', '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π'].map((level, index) => (
                          <label key={level} className="flex items-center space-x-3">
                            <input
                              type="radio"
                              name="filterLevel"
                              className="h-4 w-4 text-red-600 focus:ring-red-500"
                              defaultChecked={index === 2}
                            />
                            <span className="text-sm text-gray-700">{level}</span>
                          </label>
                        ))}
                      </div>
                    </div>

                    <div>
                      <h3 className="text-lg font-medium text-gray-900 mb-4">–ë–µ–ª—ã–π —Å–ø–∏—Å–æ–∫ –¥–æ–º–µ–Ω–æ–≤</h3>
                      <textarea
                        className="block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-red-500 focus:border-red-500"
                        rows={4}
                        placeholder="example.com&#10;trusted-sender.ru&#10;company.org"
                      />
                      <p className="text-xs text-gray-500 mt-1">
                        –î–æ–±–∞–≤—å—Ç–µ –¥–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –¥–æ–º–µ–Ω—ã (–ø–æ –æ–¥–Ω–æ–º—É –Ω–∞ —Å—Ç—Ä–æ–∫—É)
                      </p>
                    </div>
                  </div>
                </div>
              )}

              {/* –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ */}
              {activeTab === 'advanced' && (
                <div className="p-6">
                  <h2 className="text-xl font-semibold text-gray-900 mb-6">–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</h2>
                  
                  <div className="space-y-6">
                    <div>
                      <label className="block text-sm font-medium text-gray-900 mb-2">
                        –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∏—Å–µ–º –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
                      </label>
                      <input
                        type="number"
                        value={settings.maxEmailsDisplay}
                        onChange={(e) => handleSettingChange('maxEmailsDisplay', parseInt(e.target.value))}
                        className="block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-red-500 focus:border-red-500"
                        min="10"
                        max="200"
                      />
                    </div>

                    <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
                      <h3 className="text-sm font-medium text-blue-900 mb-2">–≠–∫—Å–ø–æ—Ä—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫</h3>
                      <p className="text-sm text-blue-700 mb-3">
                        –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ —Ñ–∞–π–ª –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
                      </p>
                      <button className="bg-blue-600 text-white px-4 py-2 rounded-md text-sm hover:bg-blue-700">
                        –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
                      </button>
                    </div>

                    <div className="bg-red-50 border border-red-200 rounded-lg p-4">
                      <h3 className="text-sm font-medium text-red-900 mb-2">–°–±—Ä–æ—Å –Ω–∞—Å—Ç—Ä–æ–µ–∫</h3>
                      <p className="text-sm text-red-700 mb-3">
                        –í–µ—Ä–Ω—É—Ç—å –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫ –∑–Ω–∞—á–µ–Ω–∏—è–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
                      </p>
                      <button className="bg-red-600 text-white px-4 py-2 rounded-md text-sm hover:bg-red-700">
                        –°–±—Ä–æ—Å–∏—Ç—å –∫ –∑–∞–≤–æ–¥—Å–∫–∏–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º
                      </button>
                    </div>
                  </div>
                </div>
              )}

              {/* –ö–Ω–æ–ø–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è */}
              <div className="px-6 py-4 bg-gray-50 border-t border-gray-200 flex justify-end space-x-3">
                <button className="px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50">
                  –û—Ç–º–µ–Ω–∏—Ç—å
                </button>
                <button className="px-4 py-2 bg-red-600 text-white rounded-md text-sm font-medium hover:bg-red-700">
                  –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}

export default Settings
